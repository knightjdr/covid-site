{"version":3,"sources":["webpack:///./src/utils/round.js","webpack:///./src/utils/debounce.js","webpack:///./src/components/heatmap/heatmap-columns.js","webpack:///./src/components/heatmap/heatmap-legend.js","webpack:///./src/components/heatmap/heatmap-controls.js","webpack:///./src/components/heatmap/heatmap-description.js","webpack:///./src/components/heatmap/heatmap-rows.js","webpack:///./src/components/heatmap/heatmap.js","webpack:///./src/components/heatmap/canvas/convert-hue-to-rgb.js","webpack:///./src/components/heatmap/canvas/convert-rgb-to-hex.js","webpack:///./src/components/heatmap/canvas/convert-hsl-to-hex.js","webpack:///./src/components/heatmap/canvas/initialize-color-gradient.js","webpack:///./src/components/heatmap/canvas/set-range-partial.js","webpack:///./src/components/heatmap/canvas/draw-canvas.js","webpack:///./src/components/heatmap/heatmap-container.js","webpack:///./src/pages/heatmap/index.js","webpack:///./src/components/input/input.js"],"names":["Round","value","precision","multiplier","Math","round","debounce","func","wait","immediate","timeout","args","context","this","later","apply","callNow","clearTimeout","setTimeout","HeatmapColumns","columns","highlightedBait","className","map","column","key","nav","to","HeatmapLegend","HeatmapControls","handleChangeSearchTerm","handleSearch","searchTerm","direction","id","label","onChange","onKeyPress","ariaLabel","icon","faSearch","kind","onClick","message","faExclamationTriangle","HeatmapDescription","HeatmapRows","forwardRef","refs","highlightedPrey","rows","scrollerDimensions","translation","ref","container","style","transform","row","localeCompare","undefined","sensitivity","canvas","propTypes","PropTypes","string","isRequired","arrayOf","shape","height","number","width","oneOfType","Heatmap","defaultProps","convertHuetoRGB","p","q","tInput","t","componentToHex","c","hex","toString","length","convertRGBtoHex","r","g","b","convertHSLtoHex","hsl","s","l","h","rgb","initializeColorGradient","colorSpace","numColors","increment","gradient","i","lightness","setRangePartial","inMin","inMax","outMin","outMax","inputRange","outputRange","inputNum","num","DPI","window","devicePixelRatio","createCanvas","data","dimensions","cellSize","ctx","getContext","clearRect","scale","cellDimension","colorGradient","convertToFillRange","partialSetRange","NUM_COLORS","forEach","rowIndex","y","columnIndex","x","fillStyle","fillRect","rowMap","reduce","accum","index","toLowerCase","HeatmapContainer","useState","setHighlightedPrey","names","startIndex","setRows","setSearchTerm","setTranslation","canvasRef","useRef","containerRef","programmticScrollRef","urlBait","useQueryParam","StringParam","urlPrey","updateCanvas","pageSize","pageSizeWithBuffer","dims","current","getBoundingClientRect","floor","numRows","containerHeightInCells","sliceStart","sliceEnd","ROW_BUFFER","maxTopRowIndex","getScrollToRow","pageRows","slice","pageValues","values","drawCanvas","debouncedUpdated","findPrey","term","desiredTopRowIndex","scrollTop","useEffect","getTop","ceil","onResize","topIndex","onScroll","addEventListener","removeEventListener","e","target","currentTarget","tagName","which","keyCode","HeatmapPage","footer","title","Input","props","htmlFor"],"mappings":"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","file":"component---src-pages-heatmap-index-js-9f04508ab5c875f0129a.js","sourcesContent":["const Round = (value, precision = 0) => {\n  const multiplier = 10 ** precision;\n  return Math.round(value * multiplier) / multiplier;\n};\n\nexport default Round;\n","/* Returns a function, that, as long as it continues to be invoked, will not\n** be triggered. The function will be called after it stops being called for\n** 'wait' milliseconds. If 'immediate' is passed, trigger the function on the\n** leading edge, instead of the trailing. */\n\nfunction debounce(func, wait, immediate) {\n  let timeout;\n  return function debounced(...args) {\n    const context = this;\n    const later = function delayedFunc() {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n}\n\nexport default debounce;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Link from '../link/link';\n\nconst HeatmapColumns = ({\n  columns,\n  highlightedBait,\n}) => (\n  <div className=\"heatmap__columns-container\">\n    <div className=\"heatmap__columns\">\n      {\n        columns.map((column) => (\n          <div\n            className={highlightedBait === column ? 'heatmap__highlight' : null}\n            key={column}\n          >\n            <Link\n              nav\n              to={`/${column}`}\n            >\n              {column}\n            </Link>\n          </div>\n        ))\n      }\n    </div>\n  </div>\n);\n\nHeatmapColumns.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.string).isRequired,\n  highlightedBait: PropTypes.string.isRequired,\n};\n\nexport default HeatmapColumns;\n","import React from 'react';\n\nconst HeatmapLegend = () => (\n  <span className=\"heatmap__legend\">Legend</span>\n);\n\nexport default HeatmapLegend;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faExclamationTriangle } from '@fortawesome/pro-solid-svg-icons';\n\nimport Button from '../buttons/icon/button';\nimport HeatmapLegend from './heatmap-legend';\nimport Input from '../input/input';\n\nconst HeatmapControls = ({\n  handleChangeSearchTerm,\n  handleSearch,\n  searchTerm,\n}) => (\n  <div className=\"heatmap__controls\">\n    <HeatmapLegend />\n    <Input\n      direction=\"horizontal\"\n      id=\"heatmap-search\"\n      label=\"Search:\"\n      onChange={handleChangeSearchTerm}\n      onKeyPress={handleSearch}\n      value={searchTerm.value}\n    />\n    <Button\n      ariaLabel=\"Search for prey\"\n      icon={faSearch}\n      kind=\"primary\"\n      onClick={handleSearch}\n    />\n    {\n      searchTerm.message\n      && (\n        <span className=\"heatmap__controls-message\">\n          <FontAwesomeIcon icon={faExclamationTriangle} />\n          {searchTerm.message}\n        </span>\n      )\n    }\n  </div>\n);\n\nHeatmapControls.propTypes = {\n  handleChangeSearchTerm: PropTypes.func.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  searchTerm: PropTypes.shape({\n    message: PropTypes.string,\n    value: PropTypes.string,\n  }).isRequired,\n};\n\nexport default HeatmapControls;\n","/* eslint-disable max-len */\nimport React from 'react';\n\nimport Link from '../link/link';\n\nconst HeatmapDescription = () => (\n  <p>\n    Clustered heat map of spectral counts for all significant preys (FDR &le; 0.01) detected by viral\n    baits. An interactive version of this image can be viewed at\n    {' '}\n    <Link to=\" https://prohits-viz.lunenfeld.ca/Interactive/index.html?input_tsv=archive/1596136776_GOUYUlT0me.txt&tool=Interactive\">\n      ProHits-viz\n    </Link>\n    .\n  </p>\n);\n\nexport default HeatmapDescription;\n","import PropTypes from 'prop-types';\nimport React, { forwardRef } from 'react';\n\nconst HeatmapRows = forwardRef((\n  {\n    highlightedPrey,\n    rows,\n    scrollerDimensions,\n    translation,\n  },\n  refs,\n) => (\n  <div\n    className=\"heatmap__scroll-container\"\n    ref={refs.container}\n  >\n    <div\n      className=\"heatmap__scroller\"\n      style={scrollerDimensions}\n    >\n      <div\n        className=\"heatmap__rows\"\n        style={{ transform: `translateY(${translation}px)` }}\n      >\n        {\n          rows.map((row) => (\n            <div\n              className={\n                row.localeCompare(highlightedPrey, undefined, { sensitivity: 'base' }) === 0\n                  ? 'heatmap__highlight'\n                  : null\n              }\n              key={row}\n            >\n              {row}\n            </div>\n          ))\n        }\n      </div>\n      <canvas\n        className=\"heatmap__canvas\"\n        ref={refs.canvas}\n        style={{ transform: `translateY(${translation}px)` }}\n      />\n    </div>\n  </div>\n));\n\nHeatmapRows.propTypes = {\n  highlightedPrey: PropTypes.string.isRequired,\n  rows: PropTypes.arrayOf(PropTypes.string).isRequired,\n  scrollerDimensions: PropTypes.shape({\n    height: PropTypes.number,\n    width: PropTypes.number,\n  }).isRequired,\n  translation: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]).isRequired,\n};\n\nexport default HeatmapRows;\n","import PropTypes from 'prop-types';\nimport React, { forwardRef } from 'react';\n\nimport HeatmapColumns from './heatmap-columns';\nimport HeatmapControls from './heatmap-controls';\nimport HeatmapDescription from './heatmap-description';\n\nimport './heatmap.css';\nimport HeatmapRows from './heatmap-rows';\n\nconst Heatmap = forwardRef((\n  {\n    columns,\n    handleChangeSearchTerm,\n    handleSearch,\n    highlightedBait,\n    highlightedPrey,\n    rows,\n    scrollerDimensions,\n    searchTerm,\n    translation,\n  },\n  refs,\n) => (\n  <div className=\"heatmap\">\n    <h1>Proximity interaction heat map</h1>\n    <HeatmapDescription />\n    <HeatmapControls\n      handleChangeSearchTerm={handleChangeSearchTerm}\n      handleSearch={handleSearch}\n      searchTerm={searchTerm}\n    />\n    <div className=\"heatmap__container\">\n      <HeatmapColumns\n        columns={columns}\n        highlightedBait={highlightedBait}\n      />\n      <HeatmapRows\n        highlightedPrey={highlightedPrey}\n        ref={refs}\n        rows={rows}\n        scrollerDimensions={scrollerDimensions}\n        translation={translation}\n      />\n    </div>\n  </div>\n));\n\nHeatmap.defaultProps = {\n  highlightedBait: '',\n  highlightedPrey: '',\n};\n\nHeatmap.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.string).isRequired,\n  handleChangeSearchTerm: PropTypes.func.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  highlightedBait: PropTypes.string,\n  highlightedPrey: PropTypes.string,\n  rows: PropTypes.arrayOf(PropTypes.string).isRequired,\n  scrollerDimensions: PropTypes.shape({\n    height: PropTypes.number,\n    width: PropTypes.number,\n  }).isRequired,\n  searchTerm: PropTypes.shape({\n    message: PropTypes.string,\n    value: PropTypes.string,\n  }).isRequired,\n  translation: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]).isRequired,\n};\n\nexport default Heatmap;\n","// convertHuetoRGB converts a hue to rgb.\nconst convertHuetoRGB = (p, q, tInput) => {\n  let t = tInput;\n  if (t < 0) {\n    t += 1;\n  } else if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + ((q - p) * 6 * t);\n  } if (t < 0.5) {\n    return q;\n  } if (t < 2 / 3) {\n    return p + ((q - p) * ((2 / 3) - t) * 6);\n  }\n  return p;\n};\n\nexport default convertHuetoRGB;\n","// Convert an rgb tuple to hex;\n\nconst componentToHex = (c) => {\n  const hex = c.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n};\n\nconst convertRGBtoHex = (r, g, b) => (\n  `#${componentToHex(r)}${componentToHex(g)}${componentToHex(b)}`\n);\n\nexport default convertRGBtoHex;\n","import convertHuetoRGB from './convert-hue-to-rgb';\nimport convertRGBtoHex from './convert-rgb-to-hex';\n\n// convertHSLtoHex converts hsl colors to rgb to hex. Takes HSL values between 0 - 1 and\n// converts to range from 0 - 255, then converts to hex.\nconst convertHSLtoHex = (hsl) => {\n  let r;\n  let g;\n  let b;\n\n  if (hsl.s === 0) { // Achromatic.\n    r = hsl.l;\n    g = hsl.l;\n    b = hsl.l;\n  } else {\n    let q;\n    if (hsl.l < 0.5) {\n      q = hsl.l * (1 + hsl.s);\n    } else {\n      q = (hsl.l + hsl.s) - (hsl.l * hsl.s);\n    }\n    const p = (2 * hsl.l) - q;\n    r = convertHuetoRGB(p, q, hsl.h + (1 / 3));\n    g = convertHuetoRGB(p, q, hsl.h);\n    b = convertHuetoRGB(p, q, hsl.h - (1 / 3));\n  }\n  const rgb = {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255),\n  };\n  return convertRGBtoHex(rgb.r, rgb.g, rgb.b);\n};\n\nexport default convertHSLtoHex;\n","import convertHSLtoHex from './convert-hsl-to-hex';\nimport round from '../../../utils/round';\n\n// initializeColorGradient creates a single direction hex gradient. The color scale is set using the hue\n// and saturation components of HSL. The gradient is then defined by changing the lightness\n// from 1 (light) to 0 (dark). HSL values are on a 0-1 scale.\n// The maximum hue value of 1 equals 360 so all values are relative to that.\nconst initializeColorGradient = (colorSpace, numColors) => {\n  let h;\n  let s;\n  if (colorSpace === 'green') {\n    // Middle HSL value = (120, 100%, 50%).\n    h = 120 / 360;\n    s = 1;\n  } else if (colorSpace === 'greyscale') {\n    // Middle HSL value = (0, 0%, 50%).\n    h = 0;\n    s = 0;\n  } else if (colorSpace === 'red') {\n    // Middle HSL value = (0, 100%, 50%).\n    h = 0;\n    s = 1;\n  } else if (colorSpace === 'yellow') {\n    // Middle HSL value = (60, 100%, 50%).\n    h = 60 / 360;\n    s = 1;\n  } else { // default blue\n    // Middle (HSL value = (225, 100%, 50%).\n    h = 0.625;\n    s = 1;\n  }\n  const increment = 1 / (numColors - 1);\n  const startL = 1;\n  const gradient = [];\n  for (let i = 0; i < numColors; i += 1) {\n    const lightness = round(startL - (i * increment), 4);\n    gradient[i] = convertHSLtoHex({ h, s, l: lightness });\n  }\n  return gradient;\n};\n\nexport default initializeColorGradient;\n","/* Return a function that will map a number to an output integer range.\n** Checks to make sure the input number is within the input range. */\n\nconst setRangePartial = (inMin, inMax, outMin, outMax) => {\n  const inputRange = inMax - inMin;\n  const outputRange = outMax - outMin;\n  return (inputNum) => {\n    let num = inputNum;\n    if (inputNum > inMax) {\n      num = inMax;\n    } else if (inputNum < inMin) {\n      num = inMin;\n    }\n    return Math.round((((num - inMin) * outputRange) / inputRange) + outMin);\n  };\n};\n\nexport default setRangePartial;\n","/* eslint-disable no-param-reassign */\nimport initializeColorGradient from './initialize-color-gradient';\nimport partialSetRange from './set-range-partial';\n\nconst DPI = typeof window !== 'undefined' ? window.devicePixelRatio : 1;\nconst NUM_COLORS = 101;\nconst SPEC_CAP = 50;\n\nconst createCanvas = (canvas, data, dimensions, cellSize) => {\n  canvas.style.height = `${dimensions.height}px`;\n  canvas.style.width = `${dimensions.width}px`;\n\n  canvas.height = dimensions.height * DPI;\n  canvas.width = dimensions.width * DPI;\n\n  const ctx = canvas.getContext('2d');\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.scale(DPI, DPI);\n\n  const cellDimension = cellSize * DPI;\n  const colorGradient = initializeColorGradient('blue', NUM_COLORS);\n  const convertToFillRange = partialSetRange(0, SPEC_CAP, 0, NUM_COLORS - 1);\n\n  data.forEach((row, rowIndex) => {\n    const y = rowIndex * cellSize;\n    row.forEach((value, columnIndex) => {\n      const x = columnIndex * cellSize;\n      ctx.fillStyle = colorGradient[convertToFillRange(value)];\n      ctx.fillRect(x, y, cellDimension, cellDimension);\n    });\n  });\n};\n\nexport default createCanvas;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useQueryParam, StringParam } from 'use-query-params';\n\nimport Heatmap from './heatmap';\n\nimport debounce from '../../utils/debounce';\nimport drawCanvas from './canvas/draw-canvas';\nimport data from './assets/heatmap-shape.json';\n\nconst rowMap = data.rows.reduce((accum, value, index) => ({ ...accum, [value.toLowerCase()]: index }), {});\n\nconst CELL_SIZE = 20;\nconst ROW_BUFFER = 20;\nconst HALF_ROW_BUFFER = ROW_BUFFER / 2;\n\nconst scrollerDimensions = {\n  height: data.rows.length * CELL_SIZE,\n  width: (data.columns.length * CELL_SIZE) + 100,\n};\n\nexport const getDimensions = (container) => {\n  const { height } = container.getBoundingClientRect();\n\n  const pageSize = Math.floor(height / CELL_SIZE);\n  const pageSizeWithBuffer = pageSize + ROW_BUFFER;\n\n  return {\n    canvas: {\n      height: pageSizeWithBuffer * CELL_SIZE,\n      width: data.columns.length * CELL_SIZE,\n    },\n    numRows: data.rows.length,\n    pageSize,\n    pageSizeWithBuffer,\n  };\n};\n\nexport const getScrollToRow = (container, rowIndex, dims) => {\n  const { height } = container.getBoundingClientRect();\n  const containerHeightInCells = Math.floor(height / CELL_SIZE);\n\n  if (rowIndex <= 0) {\n    return {\n      index: 0,\n      sliceStart: 0,\n      sliceEnd: dims.pageSizeWithBuffer,\n    };\n  } if (rowIndex <= HALF_ROW_BUFFER) {\n    return {\n      index: rowIndex,\n      sliceStart: 0,\n      sliceEnd: dims.pageSizeWithBuffer,\n    };\n  }\n\n  const maxTopRowIndex = dims.numRows - containerHeightInCells;\n  if (rowIndex >= maxTopRowIndex) {\n    return {\n      index: maxTopRowIndex,\n      sliceStart: maxTopRowIndex - ROW_BUFFER,\n      sliceEnd: dims.numRows,\n    };\n  } if (rowIndex >= maxTopRowIndex - HALF_ROW_BUFFER) {\n    return {\n      index: rowIndex,\n      sliceStart: dims.numRows - dims.pageSizeWithBuffer,\n      sliceEnd: dims.numRows,\n    };\n  }\n\n  return {\n    index: rowIndex,\n    sliceStart: rowIndex - HALF_ROW_BUFFER,\n    sliceEnd: rowIndex + dims.pageSize + HALF_ROW_BUFFER,\n  };\n};\n\nconst HeatmapContainer = () => {\n  const [highlightedPrey, setHighlightedPrey] = useState('');\n  const [rows, setRows] = useState({ names: [], startIndex: null });\n  const [searchTerm, setSearchTerm] = useState({ message: '', value: '' });\n  const [translation, setTranslation] = useState(0);\n  const canvasRef = useRef();\n  const containerRef = useRef();\n  const programmticScrollRef = useRef(false);\n  const [urlBait] = useQueryParam('bait', StringParam);\n  const [urlPrey] = useQueryParam('prey', StringParam);\n\n  const updateCanvas = (rowIndex) => {\n    const dims = getDimensions(containerRef.current);\n    const row = getScrollToRow(containerRef.current, rowIndex, dims);\n    const pageRows = data.rows.slice(row.sliceStart, row.sliceEnd);\n    const pageValues = data.values.slice(row.sliceStart, row.sliceEnd);\n\n    drawCanvas(canvasRef.current, pageValues, dims.canvas, CELL_SIZE);\n    setRows({ names: pageRows, startIndex: row.sliceStart });\n    setTranslation(row.sliceStart * CELL_SIZE);\n\n    return row;\n  };\n  const debouncedUpdated = debounce(updateCanvas, 100);\n\n  const findPrey = (term) => {\n    const rowIndex = rowMap[term.toLowerCase()] || 0;\n    const { height } = containerRef.current.getBoundingClientRect();\n    const containerHeightInCells = Math.floor(height / CELL_SIZE);\n    const desiredTopRowIndex = rowIndex - Math.floor(containerHeightInCells / 2);\n\n    const row = updateCanvas(desiredTopRowIndex);\n    programmticScrollRef.current = true;\n    containerRef.current.scrollTop = row.index * CELL_SIZE;\n  };\n\n  const handleChangeSearchTerm = (e) => {\n    setSearchTerm({ message: '', value: e.target.value });\n  };\n\n  const handleSearch = (e) => {\n    if (\n      searchTerm.value\n      && (\n        e.currentTarget.tagName === 'BUTTON'\n        || (\n          e.which === 13 || e.keyCode === 13\n        )\n      )\n    ) {\n      if (rowMap[searchTerm.value.toLowerCase()]) {\n        findPrey(searchTerm.value);\n        setHighlightedPrey(searchTerm.value);\n      } else {\n        setSearchTerm({ ...searchTerm, message: 'Not found' });\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (canvasRef.current && containerRef.current) {\n      findPrey(urlPrey || '');\n      setHighlightedPrey(urlPrey);\n    }\n  }, []);\n\n  useEffect(() => {\n    const getTop = () => Math.ceil(containerRef.current.scrollTop / CELL_SIZE);\n    const onResize = () => {\n      const topIndex = getTop();\n      debouncedUpdated(topIndex);\n      programmticScrollRef.current = false;\n    };\n\n    const onScroll = () => {\n      const topIndex = getTop();\n      if (\n        !programmticScrollRef.current\n        && (\n          topIndex - rows.startIndex < 1\n          || topIndex - rows.startIndex > ROW_BUFFER - 1\n        )\n      ) {\n        debouncedUpdated(topIndex);\n      }\n      programmticScrollRef.current = false;\n    };\n\n    window.addEventListener('resize', onResize);\n    containerRef.current.addEventListener('scroll', onScroll);\n\n    return () => {\n      window.removeEventListener('resize', onResize);\n      containerRef.current.removeEventListener('scroll', onScroll);\n    };\n  }, [containerRef.current, programmticScrollRef.current, rows.startIndex]);\n\n  return (\n    <Heatmap\n      columns={data.columns}\n      handleChangeSearchTerm={handleChangeSearchTerm}\n      handleSearch={handleSearch}\n      highlightedBait={urlBait}\n      highlightedPrey={highlightedPrey}\n      ref={{\n        canvas: canvasRef,\n        container: containerRef,\n      }}\n      rows={rows.names}\n      scrollerDimensions={scrollerDimensions}\n      searchTerm={searchTerm}\n      translation={translation}\n    />\n  );\n};\n\nexport default HeatmapContainer;\n","import React from 'react';\n\nimport Heatmap from '../../components/heatmap/heatmap-container';\nimport Layout from '../../components/layout/layout';\nimport SEO from '../../components/seo/seo';\n\nconst HeatmapPage = () => (\n  <Layout footer={false}>\n    <SEO title=\"Heat map\" />\n    <Heatmap />\n  </Layout>\n);\n\nexport default HeatmapPage;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport './input.css';\n\nconst Input = ({\n  direction,\n  id,\n  label,\n  ...props\n}) => (\n  <label\n    className={`input input_${direction}`}\n    htmlFor={id}\n  >\n    <span className=\"input__label\">{label}</span>\n    <input\n      id={id}\n      {...props}\n    />\n  </label>\n);\n\nInput.defaultProps = {\n  direction: 'vertical',\n};\n\nInput.propTypes = {\n  direction: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nexport default Input;\n"],"sourceRoot":""}