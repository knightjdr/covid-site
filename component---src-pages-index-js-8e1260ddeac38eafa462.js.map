{"version":3,"sources":["webpack:///./src/utils/debounce.js","webpack:///./src/components/hooks/small-screen/use-small-screen.js","webpack:///./src/components/search/use-placeholder.js","webpack:///./src/components/display/browse/browse.js","webpack:///./src/components/display/browse/browse-container.js","webpack:///./src/pages/index.js"],"names":["debounce","func","wait","immediate","timeout","args","context","this","later","apply","callNow","clearTimeout","setTimeout","isSmallScreen","size","window","innerWidth","useSmallScreen","useState","smallScreen","setSmallScreen","listener","useEffect","addEventListener","removeEventListener","usePlaceholder","options","proteins","map","protein","id","Browse","handleChangeSelect","handleChangeInput","handleClick","handleSearch","inputPlaceholder","searchTerm","selectedProtein","className","label","onChange","placeholder","value","style","visibility","buttonStyle","kind","nav","to","autoComplete","autoCorrect","autoCapitalize","direction","onKeyDown","spellCheck","type","icon","faSearch","onClick","BrowseContainer","setSelectedProtein","setSearchTerm","search","term","navigate","encodeURIComponent","e","target","key","IndexPage","margin","title","Tag"],"mappings":"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","file":"component---src-pages-index-js-8e1260ddeac38eafa462.js","sourcesContent":["/* Returns a function, that, as long as it continues to be invoked, will not\n** be triggered. The function will be called after it stops being called for\n** 'wait' milliseconds. If 'immediate' is passed, trigger the function on the\n** leading edge, instead of the trailing. */\n\nfunction debounce(func, wait, immediate) {\n  let timeout;\n  return function debounced(...args) {\n    const context = this;\n    const later = function delayedFunc() {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n}\n\nexport default debounce;\n","import { useState, useEffect } from 'react';\n\nimport debounce from '../../../utils/debounce';\n\nconst isSmallScreen = (size) => window.innerWidth < size;\n\nconst useSmallScreen = (wait = 50, size = 800) => {\n  const [smallScreen, setSmallScreen] = useState(false);\n\n  const listener = debounce(() => {\n    setSmallScreen(isSmallScreen(size));\n  }, wait);\n\n  useEffect(() => {\n    window.addEventListener('resize', listener);\n    return () => {\n      window.removeEventListener('resize', listener);\n    };\n  });\n\n  useEffect(() => {\n    if (isSmallScreen(size)) {\n      setSmallScreen(true);\n    }\n  }, []);\n\n  return smallScreen;\n};\n\nexport default useSmallScreen;\n","import useSmallScreen from '../hooks/small-screen/use-small-screen';\n\nconst usePlaceholder = () => {\n  const isSmallScreen = useSmallScreen();\n\n  return isSmallScreen\n    ? 'Gene symbol or UniProt'\n    : 'Human gene symbol (e.g. TRIP11) or UniProt accession (e.g. Q15643)';\n};\n\nexport default usePlaceholder;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { faSearch } from '@fortawesome/pro-solid-svg-icons';\n\nimport ButtonIcon from '../../buttons/icon/button';\nimport Input from '../../input/input';\nimport Link from '../../link/link';\nimport Select from '../../select/select';\n\nimport proteins from '../../../../content/bait-list.json';\n\nimport './browse.css';\n\nconst options = proteins.map((protein) => protein.id);\n\nconst Browse = ({\n  handleChangeSelect,\n  handleChangeInput,\n  handleClick,\n  handleSearch,\n  inputPlaceholder,\n  searchTerm,\n  selectedProtein,\n}) => (\n  <div className=\"display browse\">\n    <h2>Browse & Search</h2>\n    <p className=\"display__instructions\">\n      We profiled eight of twenty-eight proteins from the viral genome (twenty in progress).\n      Select one below to view a detailed report or search for viral proteins that interact with\n      a human protein.\n    </p>\n    <div className=\"browse__inputs\">\n      <div className=\"browse__select-container\">\n        <Select\n          className={selectedProtein ? 'browse__select_option-selected' : 'browse__select'}\n          id=\"browse_select\"\n          label=\"Protein:\"\n          onChange={handleChangeSelect}\n          options={options}\n          placeholder=\"Select...\"\n          value={selectedProtein}\n        />\n        <div style={{ visibility: selectedProtein ? 'visible' : 'hidden' }}>\n          <Link\n            buttonStyle\n            kind=\"primary\"\n            nav\n            to={`/${selectedProtein}`}\n          >\n            View\n          </Link>\n        </div>\n      </div>\n      <div className=\"input_button\">\n        <Input\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          autoCapitalize=\"off\"\n          direction=\"horizontal\"\n          id=\"search_human_protein\"\n          label=\"Search:\"\n          onChange={handleChangeInput}\n          onKeyDown={handleSearch}\n          placeholder={inputPlaceholder}\n          spellCheck=\"false\"\n          type=\"search\"\n          value={searchTerm}\n        />\n        <ButtonIcon\n          kind=\"primary\"\n          icon={faSearch}\n          onClick={handleClick}\n          type=\"button\"\n        />\n      </div>\n    </div>\n  </div>\n);\n\nBrowse.propTypes = {\n  handleChangeSelect: PropTypes.func.isRequired,\n  handleChangeInput: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  inputPlaceholder: PropTypes.string.isRequired,\n  searchTerm: PropTypes.string.isRequired,\n  selectedProtein: PropTypes.string.isRequired,\n};\n\nexport default Browse;\n","import React, { useState } from 'react';\nimport { navigate } from 'gatsby';\n\nimport Browse from './browse';\n\nimport usePlaceholder from '../../search/use-placeholder';\n\nconst BrowseContainer = () => {\n  const [selectedProtein, setSelectedProtein] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const inputPlaceholder = usePlaceholder();\n\n  const search = (term) => {\n    navigate(`/search?term=${encodeURIComponent(term)}`);\n  };\n\n  const handleChangeSelect = (e) => {\n    const { value } = e.target;\n    setSelectedProtein(value);\n  };\n\n  const handleChangeInput = (e) => {\n    const { value } = e.target;\n    setSearchTerm(value);\n  };\n\n  const handleClick = () => {\n    if (searchTerm) {\n      search(searchTerm);\n    }\n  };\n\n  const handleSearch = (e) => {\n    if (e.key === 'Enter' && searchTerm) {\n      search(searchTerm);\n    }\n  };\n\n  return (\n    <Browse\n      handleChangeSelect={handleChangeSelect}\n      handleChangeInput={handleChangeInput}\n      handleClick={handleClick}\n      handleSearch={handleSearch}\n      inputPlaceholder={inputPlaceholder}\n      searchTerm={searchTerm}\n      selectedProtein={selectedProtein}\n    />\n  );\n};\n\nexport default BrowseContainer;\n","import React from 'react';\n\nimport Hero from '../components/layout/background/hero';\nimport Layout from '../components/layout/layout';\nimport SEO from '../components/seo/seo';\n\nimport Browse from '../components/display/browse/browse-container';\nimport Localization from '../components/display/localization/localization-container';\n\nimport '../components/display/display.css';\nimport './index.css';\n\nconst IndexPage = () => (\n  <Layout margin={false}>\n    <SEO title=\"Home\" />\n    <Hero\n      className=\"home__landing\"\n      Tag=\"section\"\n    >\n      <div className=\"home__landing-inner\">\n        <h1>COVID-19 interactome</h1>\n        <p className=\"home__landing-description\">\n          BioID-based interactome of the SARS-CoV-2 proteome\n        </p>\n        <Browse />\n      </div>\n    </Hero>\n  </Layout>\n);\n\nexport default IndexPage;\n"],"sourceRoot":""}